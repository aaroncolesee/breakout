{"version":3,"sources":["Game.js","App.js","serviceWorker.js","index.js"],"names":["Styles","Styled","div","createBall","x","y","radius","speed","dx","dy","color","createPaddle","width","height","createBricks","brick","bricks","i","j","push","isVisible","Game","canvasRef","useRef","useState","isGame","setIsGame","isLose","setIsLose","score","setScore","ball","setBall","paddle","setPaddle","setBricks","isGameRef","current","scoreRef","ballRef","paddleRef","bricksRef","useEffect","update","ctx","getContext","moveBall","clearRect","beginPath","arc","Math","PI","fillStyle","fill","closePath","drawBall","rect","drawPaddle","drawBricks","requestAnimationFrame","style","display","gridTemplateRows","backgroundColor","className","fontSize","margin","tabIndex","id","ref","borderRadius","onClick","onKeyDown","event","key","onKeyUp","border","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7b29c98f.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport Styled from \"styled-components\";\r\n\r\nconst Styles = Styled.div`\r\n`;\r\n\r\nconst createBall = () => {\r\n  return {\r\n    x: 305,\r\n    y: 200,\r\n    radius: 10,\r\n    speed: 5,\r\n    dx: 0.5,\r\n    dy: 3,\r\n    color: \"#5d35ca\",\r\n  };\r\n};\r\n\r\nconst createPaddle = () => {\r\n  return {\r\n    x: 255,\r\n    y: 350,\r\n    width: 100,\r\n    height: 10,\r\n    speed: 10,\r\n    dx: 0,\r\n    color: \"#5d35ca\",\r\n  };\r\n};\r\n\r\nconst createBricks = () => {\r\n  const brick = {\r\n    x: 10,\r\n    y: 10,\r\n    width: 50,\r\n    height: 20,\r\n    offX: 10,\r\n    offY: 10,\r\n    color: \"#5d35ca\",\r\n    isVisible: true,\r\n  };\r\n\r\n  const bricks = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    for (let j = 0; j < 5; j++) {\r\n      bricks.push({\r\n        x: brick.x + (brick.width + brick.offX) * i,\r\n        y: brick.y + (brick.height + brick.offY) * j,\r\n        width: brick.width,\r\n        height: brick.height,\r\n        color: brick.color,\r\n        isVisible: brick.isVisible,\r\n      });\r\n    }\r\n  }\r\n  return bricks;\r\n};\r\n\r\nfunction Game() {\r\n  const canvasWidth = 610;\r\n  const canvasHeight = 400;\r\n\r\n  const canvasRef = useRef(null);\r\n\r\n  const [isGame, setIsGame] = useState(false);\r\n  const [isLose, setIsLose] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [ball, setBall] = useState(createBall);\r\n  const [paddle, setPaddle] = useState(createPaddle);\r\n  const [bricks, setBricks] = useState(createBricks);\r\n\r\n  const isGameRef = useRef(isGame);\r\n  isGameRef.current = isGame;\r\n  const isLoseRef = useRef(isLose);\r\n  isLoseRef.current = isLose;\r\n  const scoreRef = useRef(score);\r\n  scoreRef.current = score;\r\n  const ballRef = useRef(ball);\r\n  ballRef.current = ball;\r\n  const paddleRef = useRef(paddle);\r\n  paddleRef.current = paddle;\r\n  const bricksRef = useRef(bricks);\r\n  bricksRef.current = bricks;\r\n\r\n  useEffect(() => {\r\n    update();\r\n  }, []);\r\n\r\n  const drawBall = (ctx) => {\r\n    ctx.beginPath();\r\n    ctx.arc(\r\n      ballRef.current.x,\r\n      ballRef.current.y,\r\n      ballRef.current.radius,\r\n      0,\r\n      2 * Math.PI\r\n    );\r\n    ctx.fillStyle = ballRef.current.color;\r\n    ctx.fill();\r\n    ctx.closePath();\r\n  };\r\n\r\n  const drawPaddle = (ctx) => {\r\n    ctx.beginPath();\r\n    ctx.rect(\r\n      paddleRef.current.x,\r\n      paddleRef.current.y,\r\n      paddleRef.current.width,\r\n      paddleRef.current.height\r\n    );\r\n    ctx.fillStyle = paddleRef.current.color;\r\n    ctx.fill();\r\n    ctx.closePath();\r\n  };\r\n\r\n  const drawBricks = (ctx) => {\r\n    for (let brick of bricksRef.current) {\r\n      if (brick.isVisible) {\r\n        ctx.beginPath();\r\n        ctx.rect(brick.x, brick.y, brick.width, brick.height);\r\n        ctx.fillStyle = brick.color;\r\n        ctx.fill();\r\n        ctx.closePath();\r\n      }\r\n    }\r\n  };\r\n\r\n  const moveBall = () => {\r\n    ballRef.current.x += ballRef.current.dx;\r\n    ballRef.current.y += ballRef.current.dy;\r\n\r\n    // wall collsions\r\n    if (\r\n      ballRef.current.x + ballRef.current.radius > canvasWidth ||\r\n      ballRef.current.x - ballRef.current.radius < 0\r\n    ) {\r\n      ballRef.current.dx = -ballRef.current.dx;\r\n    }\r\n    if (ballRef.current.y - ballRef.current.radius < 0) {\r\n      ballRef.current.dy = -ballRef.current.dy;\r\n    }\r\n    if (ballRef.current.y + ballRef.current.radius > canvasHeight) {\r\n      setIsGame(false);\r\n      setIsLose(true);\r\n    }\r\n\r\n    // paddle collision\r\n    if (\r\n      ballRef.current.y > paddleRef.current.y &&\r\n      ballRef.current.x < paddleRef.current.x + paddleRef.current.width &&\r\n      ballRef.current.x > paddleRef.current.x\r\n    ) {\r\n      ballRef.current.dy = -ballRef.current.speed;\r\n      ballRef.current.dx += paddleRef.current.dx * 0.2;\r\n    }\r\n\r\n    // brick collision\r\n    for (let brick of bricksRef.current) {\r\n      if (brick.isVisible) {\r\n        if (\r\n          ballRef.current.x > brick.x && // left\r\n          ballRef.current.x < brick.x + brick.width && // right\r\n          ballRef.current.y - ballRef.current.radius < brick.y + brick.height && // down\r\n          ballRef.current.y + ballRef.current.radius > brick.y // top\r\n        ) {\r\n          ballRef.current.dy = -ballRef.current.dy;\r\n          brick.isVisible = false;\r\n          setScore(scoreRef.current + 1);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const movePaddle = () => {\r\n    paddleRef.current.x += paddleRef.current.dx;\r\n\r\n    // wall collsions\r\n    if (paddleRef.current.x < 0) {\r\n      paddleRef.current.x = 0;\r\n    }\r\n    if (paddleRef.current.x + paddleRef.current.width > canvasWidth) {\r\n      paddleRef.current.x = canvasWidth - paddleRef.current.width;\r\n    }\r\n  };\r\n\r\n  const update = () => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    if (isGameRef.current) {\r\n      moveBall();\r\n      movePaddle();\r\n    }\r\n\r\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight);\r\n\r\n    drawBall(ctx);\r\n    drawPaddle(ctx);\r\n    drawBricks(ctx);\r\n\r\n    requestAnimationFrame(update);\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === \"ArrowLeft\") {\r\n      paddleRef.current.dx = -paddleRef.current.speed;\r\n    }\r\n    if (event.key === \"ArrowRight\") {\r\n      paddleRef.current.dx = paddleRef.current.speed;\r\n    }\r\n  };\r\n\r\n  const handleKeyUp = (event) => {\r\n    paddleRef.current.dx = 0;\r\n  };\r\n\r\n  const resetGame = () => {\r\n    setIsGame(false);\r\n    setIsLose(false);\r\n    setScore(0);\r\n    setBall(createBall());\r\n    setPaddle(createPaddle());\r\n    setBricks(createBricks());\r\n  };\r\n\r\n  return (\r\n    <Styles\r\n      style={{\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n        display: \"grid\",\r\n        gridTemplateRows: \".5fr auto 1fr\",\r\n        backgroundColor: \"#5d35ca\",\r\n      }}\r\n    >\r\n      <div className=\"title\" style={{ fontSize: \"4em\", color: \"white\" }}>\r\n        Breakout\r\n      </div>\r\n      <div style={{ margin: \"0px 0px 10px 0px\" }}>\r\n        <div style={{ color: \"white\", margin: \"0px 0px 10px 0px\" }}>\r\n          Score: {scoreRef.current}\r\n        </div>\r\n        <canvas\r\n          tabIndex=\"0\"\r\n          id=\"game-canvas\"\r\n          ref={canvasRef}\r\n          width={canvasWidth}\r\n          height={canvasHeight}\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            borderRadius: \".5em\",\r\n          }}\r\n          onClick={() => {\r\n            if (!isGame && !isLose) {\r\n              setIsGame(true);\r\n            }\r\n          }}\r\n          onKeyDown={handleKeyDown}\r\n          onKeyUp={handleKeyUp}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button\r\n          style={{\r\n            width: \"80px\",\r\n            height: \"25px\",\r\n            backgroundColor: \"white\",\r\n            border: \"0px\",\r\n            borderRadius: \".5em\",\r\n            color: \"#5d35ca\",\r\n          }}\r\n          onClick={() => {\r\n            resetGame();\r\n          }}\r\n        >\r\n          New Game\r\n        </button>\r\n      </div>\r\n    </Styles>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n","import React from \"react\";\nimport Game from \"./Game.js\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}